@{
    Page.Title = "Recover";
    Layout = "~/Shared/_DefaultPage.cshtml";

    bool hasPost = false;

    Validation.Add("uEmail",
        Validator.Required("Email cannot be empty"),
        Validator.StringLength(128, 3, "Email is too long or too short"),
        Validator.Regex(@"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*", "Email format is incorrect")
    );

    if (IsPost)
    {
        hasPost = true;

        bool isValid = true;

        if (!Validation.IsValid())
        {
            isValid = false;
        }

        if(isValid)
        {
            //TODO: Check if email exists in the database.
            ModelState.AddError("emailNotFound", "The given does not exist.");

            Response.Redirect("~/Index.cshtml");
        }
    }
}

<div class="col-md-12" align="center">
    <div class="row vm-1">
        <h1>Recover account</h1>
    </div>

    <div class="row vm-1">
        <p>
            Please enter your email address to recover your account.
        </p>
    </div>

    <div class="row vm-3">
        <div class="contact-form col-md-offset-3 col-md-6" align="left">

            @Html.ValidationSummary(true)

            <form method="post">
                @AntiForgery.GetHtml()
                <div class="form-group">
                    <label class="form-label" for="uUname">Email address</label>
                    <input name="uUname" class="form-control" @Validation.For("uEmail") required>
                    @FormHelper.GetFormFieldError("uEmail", Validation.IsValid("uEmail"), hasPost)
                    @FormHelper.GetFormError("emailNotFound");
                </div>

                <button type="submit" class="btn btn-secondary vm-1">Recover</button>
            </form>
        </div>
    </div>
</div>